{"version":3,"sources":["Profile/passwordreset.module.css","Profile/PasswordReset.js"],"names":["module","exports","PasswordReset","authCtx","useContext","authContext","params","URLSearchParams","window","location","search","oobCode","get","mode","console","log","navigate","useNavigate","passwordInputRef","useRef","passwordInputRef2","useState","isThereError","setIsThereError","errorMessage","setErrorMessage","isSuccess","setIsSuccess","successMessage","setSuccessMessage","className","styles","PasswordResetWrapper","PasswordResetContainer","titleSecondary","clarify","onSubmit","event","preventDefault","enteredPassword","current","value","fetch","method","body","JSON","stringify","newPassword","headers","then","response","ok","json","data","error","message","alert","isOobCode","setTimeout","formControl","inputLabel","htmlFor","inputField","type","id","ref","errorMsgList","successMsgList","btnSubmit"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,qBAAuB,4CAA4C,uBAAyB,8CAA8C,aAAe,oCAAoC,eAAiB,sCAAsC,QAAU,+BAA+B,YAAc,mCAAmC,WAAa,kCAAkC,WAAa,kCAAkC,UAAY,iCAAiC,aAAe,oCAAoC,aAAe,oCAAoC,eAAiB,sCAAsC,eAAiB,sC,oGCwJ1oBC,UAlJO,WAEpB,IAAMC,EAAUC,qBAAWC,KAErBC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAUL,EAAOM,IAAI,WACrBC,EAAOP,EAAOM,IAAI,QACxBE,QAAQC,IAAIF,GAEZC,QAAQC,IAAI,UAAWJ,GAEvB,IAAMK,EAAWC,cAEXC,EAAmBC,mBACnBC,EAAoBD,mBAG1B,EAAwCE,oBAAS,GAAM,mBAAhDC,EAAY,KAAEC,EAAe,KACpC,EAAwCF,mBAAS,MAAK,mBAA/CG,EAAY,KAAEC,EAAe,KAEpC,EAAkCJ,oBAAS,GAAM,mBAA1CK,EAAS,KAAEC,EAAY,KAC9B,EAA4CN,mBAAS,MAAK,mBAAnDO,EAAc,KAAEC,EAAiB,KAqExC,OACE,qBAAKC,UAAWC,IAAOC,qBAAqB,SAC1C,sBAAKF,UAAWC,IAAOE,uBAAuB,UAE5C,oBAAIH,UAAWC,IAAOG,eAAe,oCACrC,oBAAGJ,UAAWC,IAAOI,QAAQ,mDACW,0BAGxC,uBAAMC,SAxEY,SAACC,GACvBA,EAAMC,iBAEN,IAAMC,EAAkBrB,EAAiBsB,QAAQC,MAIjD,GAAIF,IAHqBnB,EAAkBoB,QAAQC,MAMjD,OAFAlB,GAAgB,QAChBE,EAAgB,0BAIlBX,QAAQC,IAAIwB,GACZG,MAhBA,+GAgBW,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBnC,QAASA,EACToC,YAAaR,IAEfS,QAAS,CAAE,eAAgB,sBAC1BC,MAAK,SAACC,GACP,IAAIA,EAASC,GAaX,OAAOD,EAASE,OAAOH,MAAK,SAACI,GAC3B1B,GAAa,GACbJ,GAAgB,GAChB,IAAIC,EAAe,wBACf6B,GAAQA,EAAKC,OAASD,EAAKC,MAAMC,UACnC/B,EAAe6B,EAAKC,MAAMC,SAGT,qBAAjB/B,GACiB,qBAAjBA,GACiB,qBAAjBA,GACiB,qBAAjBA,GACiB,qBAAjBA,GAIAC,EAFAD,EACE,uDAIJgC,MAAMhC,EACR,IA/BAG,GAAa,GACbJ,GAAgB,GAChBM,EAAkB,+BAClBf,QAAQC,IAAImC,GAGZ/C,EAAQsD,UAAU9C,GAClB+C,YAAW,WACT1C,EAAS,SACX,GAAG,IAwBP,IAEAE,EAAiBsB,QAAQC,MAAQ,GACjCrB,EAAkBoB,QAAQC,MAAQ,EACpC,EAWsC,UAC9B,sBAAKX,UAAWC,IAAO4B,YAAY,UACjC,uBAAO7B,UAAWC,IAAO6B,WAAYC,QAAQ,WAAU,sBAGvD,uBACE/B,UAAWC,IAAO+B,WAClBC,KAAK,WACLC,GAAG,WACHC,IAAK/C,OAGT,sBAAKY,UAAWC,IAAO4B,YAAY,UACjC,uBAAO7B,UAAWC,IAAO6B,WAAYC,QAAQ,YAAW,8BAGxD,uBACE/B,UAAWC,IAAO+B,WAClBC,KAAK,WACLC,GAAG,YACHC,IAAK7C,OAKRE,GACC,qBAAKQ,UAAWC,IAAOP,aAAa,SAClC,oBAAIM,UAAWC,IAAOmC,aAAa,SACjC,mCAAM1C,EAAY,WAIvBE,GACC,qBAAKI,UAAWC,IAAOH,eAAe,SACpC,oBAAIE,UAAWC,IAAOoC,eAAe,SACnC,mCAAMvC,EAAc,WAK1B,wBAAQE,UAAWC,IAAOqC,UAAU,2BAK9C,C","file":"static/js/18.6af9c61b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordResetWrapper\":\"passwordreset_PasswordResetWrapper__2TGws\",\"PasswordResetContainer\":\"passwordreset_PasswordResetContainer__1lBY6\",\"titlePrimary\":\"passwordreset_titlePrimary__1MYHe\",\"titleSecondary\":\"passwordreset_titleSecondary__3neNY\",\"clarify\":\"passwordreset_clarify__16__1\",\"formControl\":\"passwordreset_formControl__3kwzW\",\"inputLabel\":\"passwordreset_inputLabel__1Dp1r\",\"inputField\":\"passwordreset_inputField__3MVWu\",\"btnSubmit\":\"passwordreset_btnSubmit__1UIHk\",\"errorMessage\":\"passwordreset_errorMessage__20Jqn\",\"errorMsgList\":\"passwordreset_errorMsgList__21Vo3\",\"successMessage\":\"passwordreset_successMessage__3utYV\",\"successMsgList\":\"passwordreset_successMsgList__2ufDY\"};","import React from \"react\";\nimport { useRef, useState,useContext } from \"react\";\n\nimport authContext from \"../Components/Store/Auth-Context\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./passwordreset.module.css\";\n\nconst PasswordReset = () => {\n  // Context\n  const authCtx = useContext(authContext);\n  // URL Search Params  => To get the oobCode from the URL\n  const params = new URLSearchParams(window.location.search);\n  const oobCode = params.get(\"oobCode\");\n  const mode = params.get(\"mode\");\n  console.log(mode);\n\n  console.log(\"oobCode\", oobCode);\n  // Navigation\n  const navigate = useNavigate();\n  // Input Refs\n  const passwordInputRef = useRef();\n  const passwordInputRef2 = useRef();\n\n  //Handling Errors\n  const [isThereError, setIsThereError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  // handling Success\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // URL for password reset\n  let URL =\n    \"https://identitytoolkit.googleapis.com/v1/accounts:resetPassword?key=AIzaSyDNDXcfx6jpm5Y_121TikxsU7-Yx2ZrmeQ\";\n  // on submit handler for the form\n  const onSubmitHanlder = (event) => {\n    event.preventDefault();\n    // Getting the values from the input fields\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredPassword2 = passwordInputRef2.current.value;\n\n    // Checking if the passwords match\n    if (enteredPassword !== enteredPassword2) {\n      setIsThereError(true);\n      setErrorMessage(\"Passwords do not match\");\n      return;\n    }\n\n    console.log(enteredPassword);\n    fetch(URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        oobCode: oobCode,\n        newPassword: enteredPassword,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((response) => {\n      if (response.ok) {\n\n        setIsSuccess(true);\n        setIsThereError(false);\n        setSuccessMessage(\"Password Reset Successfully\");\n        console.log(response);\n        // Navigate to login page after 3 seconds\n\n        authCtx.isOobCode(oobCode);\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 8000);\n      } else {\n        return response.json().then((data) => {\n          setIsSuccess(false);\n          setIsThereError(true);\n          let errorMessage = \"Authentication Failed\";\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n          if (\n            errorMessage === \"INVALID_OOB_CODE\" ||\n            errorMessage === \"INVALID_PASSWORD\" ||\n            errorMessage === \"MISSING_PASSWORD\" ||\n            errorMessage === \"MISSING_OOB_CODE\" ||\n            errorMessage === \"EXPIRED_OOB_CODE\"\n          ) {\n            errorMessage =\n              \"Invalid Password Reset Link, Please Try Again Later\";\n            setErrorMessage(errorMessage);\n          }\n\n          alert(errorMessage);\n        });\n      }\n    });\n    // Clearing the form\n    passwordInputRef.current.value = \"\";\n    passwordInputRef2.current.value = \"\";\n  };\n\n  return (\n    <div className={styles.PasswordResetWrapper}>\n      <div className={styles.PasswordResetContainer}>\n        {/* <h1 className={styles.titlePrimary}>Login</h1> */}\n        <h1 className={styles.titleSecondary}>Reset account password</h1>\n        <p className={styles.clarify}>\n          Enter a new password for your account <br />\n        </p>\n\n        <form onSubmit={onSubmitHanlder}>\n          <div className={styles.formControl}>\n            <label className={styles.inputLabel} htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className={styles.inputField}\n              type=\"password\"\n              id=\"password\"\n              ref={passwordInputRef}\n            />\n          </div>\n          <div className={styles.formControl}>\n            <label className={styles.inputLabel} htmlFor=\"password2\">\n              Confirm Password\n            </label>\n            <input\n              className={styles.inputField}\n              type=\"password\"\n              id=\"password2\"\n              ref={passwordInputRef2}\n            />\n          </div>\n\n          {/* HANDLING FEEDBACKS */}\n          {isThereError && (\n            <div className={styles.errorMessage}>\n              <ul className={styles.errorMsgList}>\n                <li> {errorMessage} </li>\n              </ul>\n            </div>\n          )}\n          {isSuccess && (\n            <div className={styles.successMessage}>\n              <ul className={styles.successMsgList}>\n                <li> {successMessage} </li>\n              </ul>\n            </div>\n          )}\n\n          <button className={styles.btnSubmit}>Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n"],"sourceRoot":""}