{"version":3,"sources":["Components/pages/actions.js"],"names":["Actions","navigate","useNavigate","params","URLSearchParams","window","location","search","oobCode","get","mode","console","log","useEffect"],"mappings":"qIAAA,yBA+BeA,UAvBC,WACd,IAAMC,EAAWC,cAEXC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAUL,EAAOM,IAAI,WACrBC,EAAOP,EAAOM,IAAI,QAexB,OAdAE,QAAQC,IAAIF,GAKZG,qBAAU,WAENZ,EADW,gBAATS,EACO,mBAAD,OAAoBF,GACV,kBAATE,EACA,kBAAD,OAAmBF,GAElB,eAEb,GAAG,CAACE,EAAMT,EAAUO,IACb,IACT,C","file":"static/js/24.0021f655.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// this component is used to redirect the user to the correct page after clicking on the link in the email\n// the link contains the mode and the oobCode which is used to verify the email or reset the password\n// the mode is used to determine which page to redirect the user to\n// the oobCode is used to verify the email or reset the password\n\nconst Actions = () => {\n  const navigate = useNavigate();\n  // URL Search Params  => To get the oobCode from the URL\n  const params = new URLSearchParams(window.location.search);\n  const oobCode = params.get(\"oobCode\");\n  const mode = params.get(\"mode\");\n  console.log(mode);\n  // go to the correct page based on the mode in the URL\n  // if the mode is verifyEmail then go to the verify page\n  // if the mode is resetPassword then go to the reset page\n  // if mode is not verifyEmail or resetPassword then go to change Email page\n  useEffect(() => {\n    if (mode === \"verifyEmail\") {\n      navigate(`/verfiy?oobCode=${oobCode}`);\n    } else if (mode === \"resetPassword\") {\n      navigate(`/reset?oobCode=${oobCode}`);\n    } else {\n      navigate(`/changeEmail`);\n    }\n  }, [mode, navigate, oobCode]);\n  return null;\n};\n\nexport default Actions;\n"],"sourceRoot":""}